vi .Rprofile
vi .Rprofile
demodata=rnorm(100)
demofunc=function(x){}
demofunc=function(x){
mu=mean(x)
sigma=sd()
sigma=sd(x)
retval=c(mu,sigma)
return(retval)
}
fix(demofunc)
package.skeleton(c('demodata',"demofunc"),name="demopack")
dir()
setwd("~/zhaozhenhan10242012.git")
install.packages("tikzDevice",repos="http://R-Forge.R-project.org")
setwd("~/zhaozhenhan10242012.git")
pwd
cd 550400
loadpackage(tikzdevice)
attach(tikzdevice)
require(tikzDevice)
tikz(file='demotikz.tex',standAlone=T)
x=seq(-4,4,0.1)
plot(x,dnorm(x),)
plot(x,dnorm(x),)
plot(x,dnorm(x),ty)
plot(x,dnorm(x),type='1',ylab='\large $\\phi(x)$',xlab='\Large $x$',main='Class Demo')
plot(x,dnorm(x),type='1',ylab='\ large $\\phi(x)$',xlab='\Large $x$',main='Class Demo')
plot(x,dnorm(x),type='1',ylab='\ large $\\phi(x)$',xlab='\ Large $x$',main='Class Demo')
plot(x,dnorm(x),type='1',ylab='\ large $\\phi(x)$',xlab='\ Large $x$',main='Class Demo')
plot(x,dnorm(x),type='l',ylab='\ large $\\phi(x)$',xlab='\ Large $x$',main='Class Demo')
dev.off()
tools::texi2pdf('demotikz.tex')
setwd("C/users/George/550400/zhaozhenhan10242012.git")
setwd("C:/users/George/550400/zhaozhenhan10242012.git")
setwd("C:\users\George\550400\zhaozhenhan10242012.git")
load("d:/RStudio/.RData")
install.packages(R.matlab)
install.packages("r.matlab")
y
yes
install.packages("R.matlab")
require(R.matlab)
matlab
matlab=Matlab()
open(matlab)
install.packages("Teachingdemos")
install.packages("TeachingDemos")
install.packages("Teachingdemos")
install.packages("TeachingDemos")
install.packages("Teachingdemos")
install.packages("Teachingdemos")
D=(c(0,1,2,3,4,5;
1,0,3,4,5,6;
2,3,0,5,6,7;
3,4,5,0,7,8;
4,5,6,7,0,9;
5,6,7,8,9,0))
Xhat = cmdscale(D)
shero =c("Ironman","Batman","Superman","Hulk","Spiderman","Thor")
rownames(Xhat) = shero
colnames(Xhat) = c("X1","X2")
plot(Xhat,xlim=c(-9,9),ylim=c(-5,5),pch=1:6)
text(Xhat[,1]+3,Xhat[,2]+c(-1,0,1,1,-1,0),labels=shero,cex=1)
print(Xhat)
require(TeachingDemos)
faces(Xhat)
D=(c(0,1,2,3,4,5;
1,0,3,4,5,6;
2,3,0,5,6,7;
3,4,5,0,7,8;
4,5,6,7,0,9;
5,6,7,8,9,0))
Xhat = cmdscale(D)
shero =c("Ironman","Batman","Superman","Hulk","Spiderman","Thor")
rownames(Xhat) = shero
colnames(Xhat) = c("X1","X2")
plot(Xhat,xlim=c(-9,9),ylim=c(-5,5),pch=1:6)
text(Xhat[,1]+3,Xhat[,2]+c(-1,0,1,1,-1,0),labels=shero,cex=1)
print(Xhat)
require(TeachingDemos)
faces(Xhat)
D=matrix(c(0,1,2,3,4,5,
1,0,3,4,5,6,
2,3,0,5,6,7,
3,4,5,0,7,8,
4,5,6,7,0,9,
5,6,7,8,9,0),nrow=6)
D
Xhat = cmdscale(D)
shero =c("Ironman","Batman","Superman","Hulk","Spiderman","Thor")
rownames(Xhat) = shero
colnames(Xhat) = c("X1","X2")
plot(Xhat,xlim=c(-9,9),ylim=c(-5,5),pch=1:6)
text(Xhat[,1]+3,Xhat[,2]+c(-1,0,1,1,-1,0),labels=shero,cex=1)
print(Xhat)
require(TeachingDemos)
faces(Xhat)
e distance matrix based on the diagonal entries of $X$, matrix $X$ as well as a o
e distance matrix based on the diagonal entries of $X$, matrix $X$ as well as a o
\bibliography{biblio}
pwd
setwd=("c:users\George\550400\zzhao13HW3.git")
setwd=("c:users/George/550400/zzhao13HW3.git")
A=matrix(c(1, 2, 3,
2, 3, 4,
3, 4, 5,
4, 5, 6), nrow = 4, byrow=TRUE)
B=matrix(c(1, 2, 3,
2, 4, 6,
3, 6, 9,
4, 8, 12), nrow = 4, byrow=TRUE)
xydataA=A[,1:2]
xydataB=B[,1:2]
plot(xydataA,xlab='1st column',ylab='2nd column',main='Point Plot of A and B',col='black',cex=1,pch=20)
points(xydataB,cex=1,pch=20,col='blue')
rankB <- qr(B)$rank
wd
getwd()
setwd("c:users\George\550400\zzhao13HW3.git")
setwd("c:users/George/550400/zzhao13HW3.git")
A=matrix(c(1, 2, 3,
2, 3, 4,
3, 4, 5,
4, 5, 6), nrow = 4, byrow=TRUE)
B=matrix(c(1, 2, 3,
2, 4, 6,
3, 6, 9,
4, 8, 12), nrow = 4, byrow=TRUE)
xydataA=A[,1:2]
xydataB=B[,1:2]
plot(xydataA,xlab='1st column',ylab='2nd column',main='Point Plot of A and B',col='black',cex=1,pch=20)
points(xydataB,cex=1,pch=20,col='blue')
getwd()
A=matrix(c(1, 2, 3,
2, 3, 4,
3, 4, 5,
4, 5, 6), nrow = 4, byrow=TRUE)
B=matrix(c(1, 2, 3,
2, 4, 6,
3, 6, 9,
4, 8, 12), nrow = 4, byrow=TRUE)
xydataA=A[,1:2]
xydataB=B[,1:2]
plot(xydataA,xlab='1st column',ylab='2nd column',main='Point Plot of A and B',col='black',cex=1,pch=20)
points(xydataB,cex=1,pch=20,col='blue')
rankA=qr(A)$rank
rankB=qr(B)$rank
a=cbind(A[1:2,3])
A22=A[1:2,1:2]
x=solve(A22, a)
X=A%*%t(A)
c=cbind(diag(X))
one=cbind(c(1,1,1,1))
Dsqr=c%*%t(one)+one%*%t(c)-2*X
D=sqrt(Dsqr)
X=A%*%t(A)
c=cbind(diag(X))
one=cbind(c(1,1,1,1))
Dsqr=c%*%t(one)+one%*%t(c)-2*X
D=sqrt(Dsqr)
rankB=qr(B)$rank
dis=dist(A)
distance=as.matrix(dis)
tinyK=1
smallK=10
mediumK=75
largeK=150
load("C:/Users/George/zzhao13HW3.git/matlabclown.RData")
svdX=svd(X)
U=svdX$u
S=diag(svdX$d)
V=svdX$v
k=smallK
M=U[,1:k,drop=FALSE] %*% S[1:k,1:k,drop=FALSE] %*% t(V[,1:k,drop=FALSE])
image(M,col=gray.colors(k))
tinyK=1
smallK=10
mediumK=75
largeK=150
load("C:/Users/George/zzhao13HW3.git/matlabclown.RData")
svdX=svd(X)
U=svdX$u
S=diag(svdX$d)
V=svdX$v
k=smallK
M=U[,1:k,drop=FALSE] %*% S[1:k,1:k,drop=FALSE] %*% t(V[,1:k,drop=FALSE])
\item[(a)]
tinyK=1
smallK=10
mediumK=75
largeK=150
load("C:/Users/George/zzhao13HW3.git/matlabclown.RData")
svdX=svd(X)
U=svdX$u
S=diag(svdX$d)
V=svdX$v
k=smallK
M=U[,1:k,drop=FALSE] %*% S[1:k,1:k,drop=FALSE] %*% t(V[,1:k,drop=FALSE])
image(M,col=gray.colors(k))
S=matrix(rep(1,51*51),nrow=51,byrow=TRUE)
for (i in 1:51){
for (j in 1:51){
if(i == j) S[i,j]=9
else if(abs(i-j)>=1 & abs(i-j)<=3) S[i,j]=8
else if(abs(i-j)>=4 & abs(i-j)<=6) S[i,j]=7
else if(abs(i-j)>=7 & abs(i-j)<=9) S[i,j]=6
else if(abs(i-j)>=10 & abs(i-j)<=12) S[i,j]=5
else if(abs(i-j)>=13 & abs(i-j)<=15) S[i,j]=4
else if(abs(i-j)>=16 & abs(i-j)<=18) S[i,j]=3
else if(abs(i-j)>=19 & abs(i-j)<=21) S[i,j]=2
else if(abs(i-j)>=22 & abs(i-j)<=24) S[i,j]=1
else S[i,j]=0
}
}
dm=matrix(rep(1,51*51),nrow=51,byrow=TRUE)
for (i in 1:51){
for (j in 1:51){
dm[i,j]=sqrt(S[i,i]+S[j,j]-2*S[i,j])
}
}
X_cmd=cmdscale(dm)
plot(X_cmd,col=heat.colors(51),pch=5)
f=function(x) {
a=t(t(x) / colSums(x))
ret=sqrt(colSums((a[,rep(1:ncol(x), ncol(x))]
- a[, rep(1:nol(x),
rep(ncol(x), ncol(x)))])^2
* sum(x) / rowSums(x)))
matrix(ret, ncol = ncol(x))
}
require(MVA)
data(gardenflowers)
flowersmds=cmdscale(gardenflowers,k=17,eig=TRUE)
x=flowersmds$points[,1]
y=flowersmds$points[,2]
install.packages("MVA")
require(MVA)
data(gardenflowers)
flowersmds=cmdscale(gardenflowers,k=17,eig=TRUE)
x=flowersmds$points[,1]
y=flowersmds$points[,2]
plot(x, y, xlab = "Column 1", ylab = "Column 2", xlim = range(x)*1.5, type = "n")
text(x, y, labels = colnames(as.matrix(gardenflowers)),cex = 0.5)
